[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/rohe"]

[project]
name = "rohe"
version = "0.0.8"
description = "An orchestration framework for End-to-End Machine Learning Serving with Resource Optimization on Heterogeneous Edge"
readme = "README.md"
authors = [{ name = "AaltoSEA", email = "tri.m.nguyen@aalto.fi" }]
maintainers = [
  { name = "AaltoSEA", email = "tri.m.nguyen@aalto.fi" },
  { name = "nguu0123", email = "nguu0123@gmail.com" },
]
license = { text = "Apache-2.0" }
homepage = "https://rdsea.github.io/"
repository = "https://github.com/rdsea/ROHE"
documentation = "https://rdsea.github.io/ROHE/"
classifiers = [
  "License :: OSI Approved :: Apache Software License",
  "Development Status :: 2 - Pre-Alpha",
  "Programming Language :: Python :: 3.10",
]

dependencies = [
  "Jinja2==3.1.2",
  "kubernetes==30.1.0",
  "numpy==1.23.5",
  "paho-mqtt==1.6.1",
  "pandas==1.4.3",
  "pymongo==4.3.3",
  "PyYAML==6.0.1",
  "Flask==2.2.3",
  "flask-restful==0.3.10",
  "pydantic>=2.7.4,<2.8",
  "Werkzeug==2.2.2",
  "qoa4ml>=0.2.14",
  "gunicorn>=22.0.0",
  "lazy-import>=0.2.2",
  "setuptools>=70.3.0",
  "boto3>=1.34.147",
]

optional-dependencies.yolo = ["ultralytics>=8.2.58", "gitpython>=3.1.43"]

optional-dependencies.docs = [
  "mkdocs-material",
  "mkdocs-click>=0.8.1",
  "mkdocs-awesome-pages-plugin>=2.9.2",
]

[tool.rye]
dev-dependencies = [
  "pre-commit",
  "devtools",
  "ruff",
  "datamodel-code-generator",
  "mypy",
  "codespell",
  "pytest",
]
managed = true


[tool.rye.scripts]
rohe-cli = "rohe.rohe_cli.__main__:rohe_cli"


[tool.ruff]
src = ["src"]


[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint]
select = [
  "F",   # Pyflakes
  "PL",  # Pylint convention
  "E",   # Pycode styles
  "W",   # Pycode styles
  "N",   # Pep8 naming
  "I",   # Isort,
  "UP",  # Pyupgrade
  "C4",  # Flake8 compehension
  "ISC", # Flake8 implicit str concat
  "B",   # Flake8 bugbear
  "PGH", # Pygrep hook
  "RUF", # Ruff specific rules
]
ignore = [
  "E501",   # Line too long
  "RET504", # Unnecessary assignment
  "RET505", # Unnecessary else after return
  "C901",   # Too complex function
  "B904",   # raise-without-from-inside-except, enable when understand more
  "PLR",
  "ISC001",
]
[tool.ruff.lint.pylint]
max-args = 10

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
extra_checks = true
check_untyped_defs = true
ignore_missing_imports = true

[tool.codespell]
skip = '*/k8s/*'

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "info"
testpaths = ["tests"]
